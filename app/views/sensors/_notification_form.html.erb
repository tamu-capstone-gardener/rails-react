<%# Ensure there's at least one threshold if none are present %>
<% if sensor.thresholds.empty? %>
  <% sensor.thresholds << "< 100" %>
  <% sensor.messages << "Your #{sensor.measurement_type.titleize} is low!" %>
<% end %>

<turbo-frame id="notification_modal_frame">
  <%= form_with model: sensor, url: update_notification_settings_plant_module_sensor_path(sensor.plant_module, sensor),
                method: :patch,
                data: { turbo_frame: "notification_modal_frame" },
                class: "theme-text-primary" do |f| %>
    <div class="mb-4 flex items-center gap-4">
      <%= f.label :notifications, "Notifications" %>
      <%= f.check_box :notifications %>
    </div>

    <div data-controller="thresholds" class="mb-4">
      <div data-thresholds-target="container">
        <% sensor.thresholds.each_with_index do |threshold, index| %>
          <div class="flex items-center gap-2 mb-2" data-thresholds-target="entry">
            <select name="comparisons[]" class="select border p-1 rounded">
              <% ["<", "<=", "=", ">=", ">"].each do |op| %>
                <option value="<%= op %>" <%= threshold.strip.start_with?(op) ? "selected" : "" %>><%= op %></option>
              <% end %>
            </select>
            <input type="text" name="values[]" value="<%= threshold.gsub(/^[<>=]{1,2}\s*/, '') %>" class="text-box p-1 rounded w-1/3" placeholder="Threshold value" />
            <input type="text" name="messages[]" value="<%= sensor.messages[index] %>" class="text-box p-1 rounded w-1/2" placeholder="Message" />
            <button type="button" data-action="click->thresholds#remove" class="text-red-500">&times;</button>
          </div>
        <% end %>
      </div>

      <button type="button" data-action="click->thresholds#add" class="btn-secondary px-4 py-2 rounded-lg mt-2">+ Add Rule</button>
    </div>

    <%= f.submit "Save Notification Settings", class: "btn-primary px-4 py-2 rounded-lg mt-4" %>
  <% end %>
</turbo-frame>
